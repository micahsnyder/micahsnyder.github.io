name: CMake Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    branches: [master/*]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v1

      - uses: lukka/get-cmake@latest

      - name: Create Build Directory
        shell: bash
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Run CMake+Ninja with triplet (cmd)
        uses: lukka/run-cmake@main
        id: runcmake_cmd
        with:
          working-directory: ${{runner.workspace}}/build
          cmakeGenerator: "Ninja" # Visual Studio 15 2017
          cmakeListsOrSettingsJson: "CMakeListsTxtBasic"
          cmakeListsTxtPath: "${{runner.workspace}}/micahsnyder.github.io/sample_code/error_handling_in_c/CMakeLists.txt"
          useVcpkgToolchainFile: true
          cmakeAppendedArgs: '-A x64 -- -v'
          cmakeBuildType: '${{ env.BUILD_TYPE }}'
          buildDirectory: "${{runner.workspace}}/build"

      - name: Test
        working-directory: ${{runner.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{ env.BUILD_TYPE }} -V

  build-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v1

      # - name: Install Build Tools
      #   run: brew install <package>

      - uses: lukka/get-cmake@latest

      - name: Create Build Directory
        shell: bash
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run:
          cmake ${{runner.workspace}}/micahsnyder.github.io/sample_code/error_handling_in_c
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Build
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config ${{ env.BUILD_TYPE }}

      - name: Test
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{ env.BUILD_TYPE }} -V

  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Install Build Tools
        run: sudo apt-get install -y valgrind

      - uses: lukka/get-cmake@latest

      - name: Create Build Directory
        shell: bash
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run:
          cmake ${{runner.workspace}}/micahsnyder.github.io/sample_code/error_handling_in_c
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Build
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config ${{ env.BUILD_TYPE }}

      - name: Test
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{ env.BUILD_TYPE }} -V
